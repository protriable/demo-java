<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.protry.mapper.RoleMapper">
    <resultMap id="roleResultMap" type="Role">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="age" column="age"/>
        <result property="note" column="note"/>
    </resultMap>
    
    <sql id="role_columns">
        id, name, age, note
    </sql>

    <sql id="role_two_columns">
        #{prefix}.id, #{prefix}.name, #{prefix}.age, #{prefix}.note
    </sql>

    <!--  resultType可以用别名  -->
    <select id="getRole" parameterType="long" resultType="com.protry.entity.Role">
        select <include refid="role_columns"/> from t_role where id = #{id}
    </select>

    <insert id="insertRole" parameterType="role" keyProperty="id" useGeneratedKeys="true">
        <selectKey keyProperty="id" resultType="int" order="BEFORE">
            select if(max(id) is null , 1, max(id) + 2) as newId from t_role
        </selectKey>
        insert into t_role values (#{id}, #{name}, #{age}, #{note})
    </insert>

    <delete id="deleteRole" parameterType="long">
        delete from t_role where id = #{id}
    </delete>
    
    <update id="updateRole" parameterType="role">
        update t_role
        <set>
            <if test="name != null and name != ''">
                name=#{name},
            </if>
            <if test="note != null and note != ''">
                note=#{note}
            </if>
        </set>
        where id=#{id}
    </update>
    <select id="getRoleById" resultType="com.protry.entity.Role">
        select <include refid="role_two_columns">
        <property name="prefix" value="r"/>
    </include> from t_role r where id=#{id}
    </select>
    <select id="findRolesByName" resultMap="roleResultMap" parameterType="string">
        select <include refid="role_columns"/>
        from t_role
        <where>
            <if test="_parameter != null and _parameter != ''">
                and name like concat ('%', #{name}, '%')
            </if>
        </where>
    </select>
    <select id="findRoles" resultMap="roleResultMap">
        select <include refid="role_columns"/>
        from t_role where 1=1
        <choose>
            <when test="name != null and name != ''">
                and name like concat('%', #{name}, '%')
            </when>
            <when test="id != null">
                and id=${id}
            </when>
            <otherwise>
                and note is not null
            </otherwise>
        </choose>
    </select>
</mapper>